name: pretest-nodecleaner

on:
  pull_request:
    branches:
      - staging
    paths:
      - 'common/**'
      - 'services/cronjob/nodecleaner/**'
      - '.github/workflows/pretest-nodecleaner.yaml'
      - 'charts/murmurations/charts/nodecleaner/**'

concurrency:
  group: environment-test

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.5

    - name: Test
      run: make test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Publish nodecleaner docker images
      run: make docker-push-nodecleaner

  deploy:
    name: Deploy
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 murmtest

    - name: Restart nodecleaner deployment
      run: make deploy-nodecleaner DEPLOY_ENV=pretest

  e2e_test:
    name: E2E Test
    needs: [ test, build, deploy ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Newman Installation
        run: |
          npm install
          npm install -g newman

      - name: Test Index
        run: ./wait_for_timeout.sh https://pretest-index.murmurations.network/v1/ping 200 300

      - name: Test Library
        run: ./wait_for_timeout.sh https://pretest-library.murmurations.network/v1/ping 200 300

      - name: Newman E2E Test
        run: make newman-test DEPLOY_ENV=pretest

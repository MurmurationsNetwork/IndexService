name: staging

on:
  push:
    branches:
      - staging

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.5

      - name: Test
        run: make test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish index docker images
        run: make docker-push-index

      - name: Publish library docker images
        run: make docker-push-library

      - name: Publish geoip docker images
        run: make docker-push-geoip

      - name: Publish validation docker images
        run: make docker-push-validation

      - name: Publish nodecleaner docker images
        run: make docker-push-nodecleaner

      - name: Publish revalidatenode docker images
        run: make docker-push-revalidatenode

      - name: Publish schemaparser docker images
        run: make docker-push-schemaparser

  deploy:
    name: Deploy
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 murmtest

      - name: Restart index deployment
        run: make deploy-index DEPLOY_ENV=staging

      - name: Restart library deployment
        run: make deploy-library DEPLOY_ENV=staging

      - name: Restart geoip deployment
        run: make deploy-geoip DEPLOY_ENV=staging

      - name: Restart validation deployment
        run: make deploy-validation DEPLOY_ENV=staging

      - name: Restart nodecleaner deployment
        run: make deploy-nodecleaner DEPLOY_ENV=staging

      - name: Restart revalidatenode deployment
        run: make deploy-revalidatenode DEPLOY_ENV=staging

      - name: Restart schemaparser deployment
        run: make deploy-schemaparser DEPLOY_ENV=staging

  e2e_test:
    name: E2E Test
    needs: [test, build, deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Newman Installation
        run: |
          npm install
          npm install -g newman

      - name: Test Index
        run: ./wait_for_timeout.sh https://test-index.murmurations.network/v1/ping 200 300

      - name: Test Library
        run: ./wait_for_timeout.sh https://test-library.murmurations.network/v1/ping 200 300

      - name: Newman E2E Test
        run: make newman-test DEPLOY_ENV=staging

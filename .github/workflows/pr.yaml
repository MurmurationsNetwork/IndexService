# This workflow is triggered on pull requests to the main branch. It includes
# jobs for testing, linting, checking for build exclusions, building Docker
# images, and deploying services.

name: PR Workflow
on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.5
      - name: Execute Tests
        run: make test

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19.5
      - name: Run Linter
        uses: golangci/golangci-lint-action@v3

  # Check file changes and determine which services should be excluded from
  # build and deployment.
  check-exclusions:
    name: Check Exclusions
    runs-on: ubuntu-latest
    outputs:
      exclude_matrix: ${{ steps.determine-exclusions.outputs.exclude_matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Determine Exclusions
        id: determine-exclusions
        run: >
          exclude_matrix=$(bash ./scripts/determine_exclusions.sh "${{
          github.event.before }}" "${{ github.event.after }}")

          echo "exclude_matrix=${exclude_matrix}" >> $GITHUB_OUTPUT
      - name: Display Excluded Services
        run: |
          echo "Services to be excluded:"
          echo "${{ steps.determine-exclusions.outputs.exclude_matrix }}"

  build:
    name: Build Docker Image - ${{ matrix.service }}
    needs:
      - test
      - lint
      - check-exclusions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - index
          - library
          - geoip
          - validation
          - dataproxy
          - nodecleaner
          - revalidatenode
          - schemaparser
          - dataproxyupdater
          - dataproxyrefresher
        exclude: ${{ fromJSON(needs.check-exclusions.outputs.exclude_matrix) }}
    steps:
      - name: Checkout Code
        if: matrix.service != ''
        uses: actions/checkout@v4
      - name: DockerHub Login
        if: matrix.service != ''
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Docker Image
        if: matrix.service != ''
        run: make docker-push-${{ matrix.service }}

  deploy:
    name: Deploy Service - ${{ matrix.service }}
    needs:
      - test
      - lint
      - check-exclusions
      - build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - index
          - library
          - geoip
          - validation
          - dataproxy
          - nodecleaner
          - revalidatenode
          - schemaparser
          - dataproxyupdater
          - dataproxyrefresher
        exclude: ${{ fromJSON(needs.check-exclusions.outputs.exclude_matrix) }}
    env:
      PRETEST_SERVER_IP: ${{ secrets.PRETEST_SERVER_IP }}
      PRETEST_KUBECONFIG_PATH: ${{ secrets.PRETEST_KUBECONFIG_PATH }}
    steps:
      - name: Checkout Repository
        if: matrix.service != ''
        uses: actions/checkout@v2
      - name: Setup SSH for Server Access
        if: matrix.service != ''
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Add SSH Key to Known Hosts
        if: matrix.service != ''
        run: |
          ssh-keyscan -H ${{ env.PRETEST_SERVER_IP }} >> ~/.ssh/known_hosts
      - name: Copy Kubernetes Config from Server
        if: matrix.service != ''
        run: >
          scp root@${{ env.PRETEST_SERVER_IP }}:${{ env.PRETEST_KUBECONFIG_PATH
          }} ./kubeconfig
      - name: Replace Localhost IP in Kubeconfig
        if: matrix.service != ''
        run: >
          sed -i 's/https:\/\/127.0.0.1:6443/https:\/\/${{ env.PRETEST_SERVER_IP
          }}:6443/' ./kubeconfig
      - uses: azure/setup-kubectl@v3
        if: matrix.service != ''
        with:
          version: latest
        id: install
      - name: Deploy Service
        if: matrix.service != ''
        env:
          KUBECONFIG: ./kubeconfig
        run: make deploy-${{ matrix.service }} DEPLOY_ENV=pretest

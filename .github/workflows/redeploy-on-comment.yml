# Workflow Description:
# This GitHub Actions workflow is initiated by specific review comments from
# authorized users in pull request reviews. It triggers a build and deployment
# process when a comment containing '/rebuild' is made by an authorized user.

name: Redeploy on Specific Review Comment by Authorized User

# Triggers:
# Activated by submitted reviews and comments in pull request reviews.
on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  # Debug Job:
  # Prints the body of the comment to the console for debugging purposes.
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Print Comment Body
        run: |
          echo "Comment Body: ${{ github.event.comment.body }}"

  # Check Comment and Trigger Build Job:
  # Verifies if the comment contains '/rebuild' and if the author is an
  # authorized user (OWNER or COLLABORATOR). Triggers the build job if true.
  check-comment-and-trigger-build:
    if: >-
      contains(github.event.comment.body, '/rebuild') &&
      (github.event.comment.author_association == 'OWNER' ||
       github.event.comment.author_association == 'COLLABORATOR')
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Build Job
        run: echo "Triggering Build Job"

  # Build Job:
  # Builds Docker images for the listed services, depending on the outcome of
  # the 'check-comment-and-trigger-build' job.
  build:
    name: Build Docker Image - ${{ matrix.service }}
    needs: check-comment-and-trigger-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - index
          - library
          - geoip
          - validation
          - dataproxy
          - nodecleaner
          - revalidatenode
          - schemaparser
          - dataproxyupdater
          - dataproxyrefresher
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: DockerHub Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish Docker Image
        run: make docker-push-${{ matrix.service }} DEPLOY_ENV=pretest

  # Deploy Job:
  # Handles the deployment of services using the built Docker images.
  # This job depends on the successful completion of the 'build' job.
  deploy:
    name: Deploy Services
    needs: build
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: pretest
      PRETEST_SERVER_IP: ${{ secrets.PRETEST_SERVER_IP }}
      PRETEST_KUBECONFIG_PATH: ${{ secrets.PRETEST_KUBECONFIG_PATH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Run Deployment Script
        run: ./scripts/deploy-services.sh

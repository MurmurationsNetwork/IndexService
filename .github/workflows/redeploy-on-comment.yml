# Workflow Description:
# This GitHub Actions workflow is initiated by specific review comments from
# authorized users in pull request reviews. It triggers a build and deployment
# process when a comment containing '!rebuild images'.

name: Redeploy on Specific Review Comment by Authorized User

# Triggers:
# Activated by submitted reviews and comments in pull request reviews.
on:
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]

jobs:
  # Job: Check Comment and Trigger Build
  # Checks if the comment contains '!rebuild images' and if the author is
  # an authorized user. Triggers the build job if conditions are met.
  check-comment-and-trigger-build:
    if: contains(github.event.comment.body, 'rebuild images')
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Build Job
        run: echo "Triggering Build Job"

  # Job: Build Docker Image
  # Builds Docker images for services listed in the matrix, depending on the
  # 'check-comment-and-trigger-build' job's outcome.
  build:
    name: Build Docker Image - ${{ matrix.service }}
    needs:
      - check-comment-and-trigger-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - index
          - library
          - geoip
          - validation
          - dataproxy
          - nodecleaner
          - revalidatenode
          - schemaparser
          - dataproxyupdater
          - dataproxyrefresher
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }} # Check out head branch of PR.

      - name: DockerHub Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish Docker Image
        run: make docker-push-${{ matrix.service }} DEPLOY_ENV=pretest

  # Job: Deploy Services
  # Handles the deployment of services using the built Docker images.
  # Depends on the successful completion of the 'build' job.
  deploy:
    name: Deploy Services
    needs: build
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: pretest
      PRETEST_SERVER_IP: ${{ secrets.PRETEST_SERVER_IP }}
      PRETEST_KUBECONFIG_PATH: ${{ secrets.PRETEST_KUBECONFIG_PATH }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    steps:
      - name: Run Deployment Script
        run: ./scripts/deploy-services.sh

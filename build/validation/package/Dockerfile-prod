# The purpose of this Dockerfile is to create a Docker image that can be used to
# run the validation app. The build stage compiles the Go app and creates a
# fully static binary, which is then copied to the runtime stage. The runtime
# stage sets up the environment for running the app and copies the static binary
# and files to the appropriate locations. By using a Docker image, the app can
# be easily deployed to different environments without worrying about
# dependencies or configuration.

# --- Build Stage ---
FROM golang:1.19.5-alpine as build

# Set the working directory inside the container for the build stage
WORKDIR /src/validation

# Copy the entire project to the working directory
ADD . /src/validation

# Build the Go app with CGO disabled to create a fully static binary, output the
# executable to /bin/validation, compile the validation app under
# ./cmd/validation
RUN CGO_ENABLED=0 go build -o /bin/validation ./cmd/validation

# --- Runtime Stage ---
FROM ubuntu:20.04

RUN apt-get update && apt-get install -y --no-install-recommends ca-certificates

# Copy the static binary from the build stage to the runtime stage
COPY --from=build /bin/validation /app/validation

EXPOSE 8000

CMD ["/app/validation"]

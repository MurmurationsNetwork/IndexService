{{- $env := .Values.global.env }}
{{- $isProd := eq $env "production" }}
{{- $isStaging := eq $env "staging" }}
{{- $isPretest := eq $env "pretest" }}
{{- $isDev := eq $env "development" }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: index-mongo
spec:
  serviceName: "index-mongo"
  {{ if $isDev }}
  replicas: 1
  {{- else }}
  replicas: {{ .Values.mongo.replicas }}
  {{- end }}
  selector:
    matchLabels:
      app: index-mongo
  template:
    metadata:
      labels:
        app: index-mongo
    spec:
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 60
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 60
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: ScheduleAnyway
      priorityClassName: murmurations-high-priority
      containers:
      - name: index-mongo
        image: mongo:5.0.6
        resources:
          requests:
            memory: "128Mi"
            cpu: "32m"
          limits:
            memory: "256Mi"
            cpu: "64m"
        {{ if not $isDev }}
        command: [ "mongod" ]
        args: [ "--config", "/etc/mongo/mongodb.conf" ]
        {{- else }}
        envFrom:
        - secretRef:
            name: index-mongo-secret
        {{- end }}
        volumeMounts:
        {{- if not $isDev }}
        - name: index-mongo-storage
          mountPath: /data/db
        {{- end }}
        - name: index-mongo-config-volume
          mountPath: /etc/mongo
      volumes:
        - name: index-mongo-config-volume
          configMap:
            name: index-mongo-config
  {{- if not $isDev }}
  volumeClaimTemplates:
  - metadata:
      name: index-mongo-storage
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: longhorn
  {{- end }}

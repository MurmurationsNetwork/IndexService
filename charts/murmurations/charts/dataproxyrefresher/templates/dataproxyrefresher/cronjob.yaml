# Define environment variables to control the deployment configuration.
{{- $env := .Values.global.env }}
{{- $isProd := eq $env "production" }}
{{- $isStaging := eq $env "staging" }}
{{- $isPretest := eq $env "pretest" }}
{{- $isDev := eq $env "development" }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: dataproxyrefresher-app
spec:
  # Conditionally suspend the job for pretest environment.
  {{- if $isPretest }}
  suspend: true
  {{- else }}
  # Conditionally set the schedule based on the environment.
  {{- if $isProd }}
  schedule: "0 1 * * *"      # every day at 1 a.m. for production
  {{- else if $isStaging }}
  schedule: "0 * * * *"      # every hour for staging
  {{- else }}
  schedule: "*/2 * * * *"    # every 2 minutes for development
  {{- end }}
  {{- end }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      {{ if $isProd }}
      backoffLimit: 3
      {{ else }}
      backoffLimit: 0
      {{ end }}
      ttlSecondsAfterFinished: 86400
      template:
        metadata:
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/dataproxyrefresher/config.yaml") . | sha256sum }}
        spec:
          containers:
          - name: dataproxyrefresher-app
            image: {{ .Values.image }}
            imagePullPolicy: IfNotPresent
            resources:
              limits:
                cpu: "500m"
              requests:
                cpu: "100m"
            envFrom:
            - configMapRef:
                name: dataproxyrefresher-app-config
            - secretRef:
                name: dataproxyrefresher-secret
            # Development environment specific configurations.
            {{- if $isDev }}
            command: ["go", "run"]
            args: ["cmd/dataproxyrefresher/main.go"]
            volumeMounts:
            - mountPath: /src
              name: source-path
            {{- end }}
          # Define volumes only for development environment.
          {{- if $isDev }}
          volumes:
          - name: source-path
            hostPath:
              path: {{ .Values.global.sourcepath }}
          {{- end }}
          restartPolicy: Never

{{- $env := .Values.global.env }}
{{- $isLive := eq $env "live" }}
{{- $isLiveTest := eq $env "live-test" }}
{{- $isCI := eq $env "ci" }}
{{- $isDev := eq $env "dev" }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: dataproxyrefresher-app
spec:
  # Conditionally suspend the job for ci environment.
  {{- if $isCI }}
  suspend: true
  {{- end }}

  # Conditionally set the schedule based on the environment.
  {{- if $isLive }}
  schedule: "0 1 * * *"      # every day at 1 a.m. for live
  {{- else if or $isLiveTest $isCI }}
  schedule: "0 * * * *"      # every hour for live-test and ci
  {{- else }}
  schedule: "*/2 * * * *"    # every 2 minutes for development
  {{- end }}
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      {{ if $isLive }}
      backoffLimit: 3
      {{ else }}
      backoffLimit: 0
      {{ end }}
      ttlSecondsAfterFinished: 86400
      template:
        metadata:
          labels:
            log-group: murm
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/dataproxyrefresher/config.yaml") . | sha256sum }}
        spec:
          containers:
          - name: dataproxyrefresher-app
            image: {{ .Values.image }}
            imagePullPolicy: IfNotPresent
            resources:
              limits:
                cpu: "500m"
              requests:
                cpu: "100m"
            envFrom:
            - configMapRef:
                name: dataproxyrefresher-app-config
            - secretRef:
                name: dataproxyrefresher-secret
            # Development environment specific configurations.
            {{- if $isDev }}
            command: ["go", "run"]
            args: ["cmd/dataproxyrefresher/main.go"]
            volumeMounts:
            - mountPath: /src
              name: source-path
            {{- end }}
          # Define volumes only for development environment.
          {{- if $isDev }}
          volumes:
          - name: source-path
            hostPath:
              path: {{ .Values.global.sourcepath }}
          {{- end }}
          restartPolicy: Never

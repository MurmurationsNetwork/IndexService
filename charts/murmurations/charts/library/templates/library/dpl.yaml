{{- $env := .Values.global.env }}
{{- $isProd := eq $env "production" }}
{{- $isStaging := eq $env "staging" }}
{{- $isPretest := eq $env "pretest" }}
{{- $isDev := eq $env "development" }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: library-app
  labels:
    app: murm
spec:
  # Limit old ReplicaSets to reduce clutter. 0 means only keep the current one.
  revisionHistoryLimit: 0
  replicas: {{ .Values.library.replicas }}
  selector:
    matchLabels:
      app: library-app
  template:
    metadata:
      labels:
        app: library-app
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/library/config.yaml") . | sha256sum }}
    spec:
      {{- if $isDev }}
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300  # 5 mins
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300  # 5 mins
      {{- else }}
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 60
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 60
      {{- end }}
      containers:
        - name: library-app
          image: {{ .Values.image }}
          envFrom:
            - configMapRef:
                name: library-app-config
            - secretRef:
                name: library-secret
          livenessProbe:
            httpGet:
              path: v2/ping
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 4
      {{- if $isDev }}
          volumeMounts:
            - mountPath: /src/library
              name: source-path
      volumes:
        - name: source-path
          hostPath:
            path: {{ .Values.global.sourcepath }}
      {{- end }}
---


{{- $env := .Values.global.env }}
{{- $isProd := eq $env "production" }}
{{- $isStaging := eq $env "staging" }}
{{- $isPretest := eq $env "pretest" }}
{{- $isDev := eq $env "development" }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: schemaparser-app
spec:
  {{- if or $isProd $isStaging $isPretest }}
  schedule: "*/1 * * * *"  # every minute
  {{- else }}
  schedule: "*/2 * * * *"  # every two minutes
  {{- end }}
  # Keep the latest successful job.
  successfulJobsHistoryLimit: 1
  # Keep the latest failed job.
  failedJobsHistoryLimit: 1
  # Only one instance of the job is running at any given time.
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      # Retry the Job 3 times before marking it as failed.
      backoffLimit: 3
      # Delete the Job and its pods 24 hours after completion.
      ttlSecondsAfterFinished: 86400
      template:
        metadata:
          labels:
            log-group: murm
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/schemaparser/config.yaml") . | sha256sum }}
        spec:
          containers:
            - name: schemaparser-app
              image: {{ .Values.image }}
              imagePullPolicy: IfNotPresent
              # Limit the CPU usage.
              resources:
                requests:
                  cpu: "100m"
                limits:
                  cpu: "500m"
              envFrom:
                - configMapRef:
                    name: schemaparser-app-config
                - secretRef:
                    name: schemaparser-secret
          {{- if eq .Values.global.env "development" }}
              command: ["go", "run"]
              args: ["cmd/schemaparser/main.go"]
              volumeMounts:
                - mountPath: /src
                  name: source-path
          volumes:
            - name: source-path
              hostPath:
                path: {{ .Values.global.sourcepath }}
          {{- end }}
          restartPolicy: Never

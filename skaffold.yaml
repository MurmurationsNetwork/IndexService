apiVersion: skaffold/v2beta29
kind: Config
build:
  local:
    push: false
  artifacts:
    - image: murmurations/dataproxy
      context: .
      docker:
        dockerfile: services/dataproxy/docker/Dockerfile-dev
    - image: murmurations/dataproxyrefresher
      context: .
      docker:
        dockerfile: services/cronjob/dataproxyrefresher/docker/Dockerfile-dev
    - image: murmurations/dataproxyupdater
      context: .
      docker:
        dockerfile: services/cronjob/dataproxyupdater/docker/Dockerfile-dev
    - image: murmurations/geoip
      context: .
      docker:
        dockerfile: build/geoip/docker/Dockerfile-dev
    - image: murmurations/index
      context: .
      docker:
        dockerfile: build/index/docker/Dockerfile-dev
    - image: murmurations/library
      context: .
      docker:
        dockerfile: build/library/docker/Dockerfile-dev
    - image: murmurations/nodecleaner
      context: .
      docker:
        dockerfile: build/nodecleaner/docker/Dockerfile-dev
    - image: murmurations/revalidatenode
      context: .
      docker:
        dockerfile: build/revalidatenode/docker/Dockerfile-dev
    - image: murmurations/schemaparser
      context: .
      docker:
        dockerfile: build/schemaparser/docker/Dockerfile-dev
    - image: murmurations/validation
      context: .
      docker:
        dockerfile: build/validation/docker/Dockerfile-dev
deploy:
  helm:
    releases:
    - name: development
      chartPath: charts/murmurations
      artifactOverrides:
        index.image: murmurations/index
        validation.image: murmurations/validation
        library.image: murmurations/library
        nodecleaner.image: murmurations/nodecleaner
        schemaparser.image: murmurations/schemaparser
        revalidatenode.image: murmurations/revalidatenode
        geoip.image: murmurations/geoip
        dataproxy.image: murmurations/dataproxy
        dataproxyupdater.image: murmurations/dataproxyupdater
        dataproxyrefresher.image: murmurations/dataproxyrefresher
      # Skaffold will try to parse the value part of each key-value pair using environment variables in the system
      setValueTemplates:
        global.sourcepath: "{{.SOURCEPATH}}"

portForward:
  - resourceType: service
    resourceName: index-mongo
    namespace: default
    port: 27017
    localPort: 27017
  - resourceType: service
    resourceName: library-mongo
    namespace: default
    port: 27017
    localPort: 27018
  - resourceType: service
    resourceName: data-proxy-mongo
    namespace: default
    port: 27017
    localPort: 27019
